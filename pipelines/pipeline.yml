jobs:
  - name: build-ansible-image
    plan:
      - get: ansible-pypi-package
        trigger: true
      - load_var: package-info
        file: ansible-pypi-package/info.json
      - in_parallel:
        - get: ansible-image-source
          trigger: true
        - get: python-image
          params: { format: oci }
          trigger: true
        - get: lib
        - get: oci-task-image
      - load_var: python-image-digest
        file: python-image/digest
      - task: build-image
        privileged: true
        file: lib/tasks/oci/build-image.yml
        image: oci-task-image
        input_mapping:
          source: ansible-image-source
          base-image: python-image
        params:
          CONTEXT: source/images/ansible
          BUILD_ARG_VERSION: ((.:package-info.version))
          IMAGE_ARG_base_image: base-image/image.tar
        output_mapping: { image: image }
      - get: ansible-image-version
        params: { bump: patch }
      - load_var: ansible-image-version
        file: ansible-image-version/version
      - put: ansible-image
        params:
          image: image/image.tar
          version: ((.:ansible-image-version))
          bump_aliases: true
      - put: ansible-image-version
        params: { file: ansible-image-version/version }
      - task: print-version-numbers
        config:
          platform: linux
          image_resource:
            type: mock
            source: { mirror_self: true }
          run:
            path: sh
            args:
              - -c
              - |
                echo Published Python image ((.:python-image-digest)) and Ansible ((.:package-info.version)) as uhligit/ansible:((.:ansible-image-version))
  - name: build-ginkgo-image
    plan:
      - in_parallel:
        - get: ginkgo-image-source
          trigger: true
        - get: ginkgo-release
          trigger: true
        - get: lib
        - get: oci-task-image
        - get: golang-image
          params: { format: oci }
          trigger: true
      - load_var: ginkgo-version
        file: ginkgo-release/version
      - task: build-image
        privileged: true
        file: lib/tasks/oci/build-image.yml
        image: oci-task-image
        input_mapping:
          source: ginkgo-image-source
          base-image: golang-image
        params:
          CONTEXT: source/images/ginkgo
          BUILD_ARG_VERSION: v((.:ginkgo-version))
          IMAGE_ARG_base_image: base-image/image.tar
        output_mapping: { image: image }
      - get: ginkgo-image-version
        params: { bump: patch }
      - load_var: ginkgo-image-version
        file: ginkgo-image-version/version
      - put: ginkgo-image
        params:
          image: image/image.tar
          version: ((.:ginkgo-image-version))
          bump_aliases: true
      - put: ginkgo-image-version
        params:
          file: ginkgo-image-version/version
      - load_var: golang-version
        file: golang-image/tag
      - task: print-version-numbers
        config:
          platform: linux
          image_resource:
            type: mock
            source: { mirror_self: true }
          run:
            path: sh
            args:
              - -c
              - |
                echo Published Golang v((.:golang-version)) and Ginkgo v((.:ginkgo-version)) as uhligit/ginkgo:((.:ginkgo-image-version))
  - name: build-rsync-image
    plan:
      - get: rsync-image-source
        trigger: true
      - in_parallel:
        - get: lib
        - get: oci-task-image
        - get: alpine-image
          params: { format: oci }
          trigger: true
      - task: build-image
        privileged: true
        file: lib/tasks/oci/build-image.yml
        image: oci-task-image
        input_mapping:
          source: rsync-image-source
          base-image: alpine-image
        params:
          CONTEXT: source/images/rsync
          IMAGE_ARG_base_image: base-image/image.tar
        output_mapping: { image: image }
      - get: rsync-image-version
        params: { bump: patch }
      - load_var: rsync-image-version
        file: rsync-image-version/version
      - put: rsync-image
        params:
          image: image/image.tar
          version: ((.:rsync-image-version))
          bump_aliases: true
      - put: rsync-image-version
        params: { file: rsync-image-version/version }
      - load_var: alpine-image-digest
        file: alpine-image/digest
      - task: print-version-numbers
        config:
          platform: linux
          image_resource:
            type: mock
            source: { mirror_self: true }
          run:
            path: sh
            args:
              - -c
              - |
                echo Published rsync as it is part of the Alpine image ((.:alpine-image-digest)) as uhligit/rsync:((.:rsync-image-version))
resources:
  - name: lib
    type: git
    icon: file-tree
    source: &github
      uri: git@github.com:suhlig/concourse-task-library.git
      private_key: ((secrets.github.ssh_key))
      branch: ((ci-branch))
  - name: ansible-image-source
    type: git
    icon: github-circle
    source:
      <<: *github
      paths: [ images/ansible/Dockerfile ]
      fetch_tags: true
  - name: ansible-image-version
    type: semver
    source:
      <<: *github
      driver: git
      branch: meta
      file: ansible-image-version
      initial_version: 1.0.0
  - name: ansible-image
    type: registry-image
    icon: docker
    source: &dockerhub
      repository: uhligit/ansible
      username: suhlig
      password: ((secrets.dockerhub.authtoken))
  - name: python-image
    type: registry-image
    icon: docker
    source:
      <<: *dockerhub
      repository: python
      tag: alpine
  - name: golang-image
    type: registry-image
    icon: docker
    source:
      <<: *dockerhub
      repository: golang
  - name: ansible-pypi-package
    type: pypi
    source:
      package: ansible
  - name: ginkgo-image-source
    type: git
    icon: github-circle
    source:
      <<: *github
      paths: [ images/ginkgo/Dockerfile ]
      fetch_tags: true
  - name: ginkgo-image-version
    type: semver
    source:
      <<: *github
      driver: git
      branch: meta
      file: ginkgo-image-version
      initial_version: 1.0.0
  - name: ginkgo-image
    type: registry-image
    icon: docker
    source:
      <<: *dockerhub
      repository: uhligit/ginkgo
  - name: oci-task-image
    type: registry-image
    icon: docker
    source:
      <<: *dockerhub
      repository: concourse/oci-build-task
  - name: ginkgo-release
    type: github-release
    icon: package-down
    source:
      user: onsi
      repository: ginkgo
      access_token: ((secrets.github.access_token))
  - name: alpine-image
    type: registry-image
    icon: docker
    source:
      <<: *dockerhub
      repository: alpine
  - name: rsync-image-source
    type: git
    icon: github-circle
    source:
      <<: *github
      paths: [ images/rsync/Dockerfile ]
      fetch_tags: true
  - name: rsync-image-version
    type: semver
    source:
      <<: *github
      driver: git
      branch: meta
      file: rsync-image-version
      initial_version: 1.0.0
  - name: rsync-image
    type: registry-image
    icon: docker
    source:
      <<: *dockerhub
      repository: uhligit/rsync
resource_types:
  - name: pypi
    type: registry-image
    source:
      repository: uhligit/concourse-pypi-resource
      tag: latest
