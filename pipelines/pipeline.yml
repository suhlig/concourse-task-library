jobs:
  - name: build-ansible-image
    plan:
      - in_parallel:
        - get: ansible-image-source
          trigger: true
        - get: ansible-pypi-package
          trigger: true
        - get: python-image
          params: { format: oci }
        - get: lib
      - in_parallel:
        - load_var: package-info
          file: ansible-pypi-package/info.json
        - load_var: image-source-version
          file: ansible-image-source/.git/describe_ref # populated by the git-resource
      - task: print-version-numbers
        config:
          platform: linux
          image_resource:
            type: mock
            source: { mirror_self: true }
          params:
            ANSIBLE_VERSION: ((.:package-info.version))
            IMAGE_VERSION: ((.:image-source-version))
          run:
            path: sh
            args:
              - -c
              - |
                echo Packaging "$ANSIBLE_VERSION" and tagging image uhligit/ansible with "$IMAGE_VERSION"
      - task: build-image
        privileged: true
        file: lib/tasks/oci/build-image.yml
        input_mapping:
          source: ansible-image-source
          base-image: python-image
        params:
          CONTEXT: source/images/ansible
          BUILD_ARG_VERSION: ((.:package-info.version))
          IMAGE_ARG_base_image: base-image/image.tar
        output_mapping: { image: image }
      - put: ansible-image
        params:
          image: image/image.tar
          version: ((.:image-source-version))
          bump_aliases: true
  - name: build-ginkgo-image
    plan:
      - in_parallel:
        - get: ginkgo-image-source
          trigger: true
        - get: ginkgo-release
          trigger: true
        - get: lib
      - load_var: ginkgo-version
        file: ginkgo-release/version
      - task: build-image
        privileged: true
        file: lib/tasks/oci/build-image.yml
        input_mapping: { source: ginkgo-image-source }
        params:
          CONTEXT: source/images/ginkgo
          BUILD_ARG_VERSION: v((.:ginkgo-version))
        output_mapping: { image: image }
      - put: ginkgo-image
        params:
          image: image/image.tar
          version: ((.:ginkgo-version)) # follows the version of ginkgo-release
          bump_aliases: true

resources:
  - name: lib
    type: git
    icon: file-tree
    source: &github
      uri: git@github.com:suhlig/concourse-task-library.git
      private_key: ((secrets.github.ssh_key))
      branch: ((ci-branch))

  - name: ansible-image-source
    type: git
    icon: github-circle
    source:
      <<: *github
      paths: [ images/ansible/Dockerfile ]
      fetch_tags: true

  - name: ansible-image
    type: registry-image
    icon: docker
    source: &dockerhub
      repository: uhligit/ansible
      username: suhlig
      password: ((secrets.dockerhub.authtoken))

  - name: python-image
    type: registry-image
    icon: docker
    source:
      <<: *dockerhub
      repository: python
      tag: alpine

  - name: ansible-pypi-package
    type: pypi
    source:
      package: ansible

  - name: ginkgo-image-source
    type: git
    icon: github-circle
    source:
      <<: *github
      paths: [ images/ginkgo/Dockerfile ]
      fetch_tags: true

  - name: ginkgo-image
    type: registry-image
    icon: docker
    source:
      repository: uhligit/ginkgo
      username: suhlig
      password: ((secrets.dockerhub.authtoken))

  - name: ginkgo-release
    type: github-release
    icon: package-down
    source:
      user: onsi
      repository: ginkgo
      access_token: ((secrets.github.access_token))

resource_types:
  - name: pypi
    type: registry-image
    source:
      repository: uhligit/concourse-pypi-resource
      tag: latest
