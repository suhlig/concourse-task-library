jobs:
  - name: build-ansible-image
    plan:
      - in_parallel:
        - get: ansible-image-source
          trigger: true
        - get: ansible-pypi-package
          trigger: true
        - get: python-image
          params: { format: oci }
        - get: lib
      - in_parallel:
        - load_var: package-info
          file: ansible-pypi-package/info.json
        - load_var: image-version
          file: ansible-image-source/.git/describe_ref # populated by the git-resource
      - task: build-image
        privileged: true
        file: lib/tasks/oci/build-image.yml
        input_mapping:
          source: ansible-image-source
          base-image: python-image
        params:
          CONTEXT: source/images/ansible
          BUILD_ARG_VERSION: ((.:package-info.version))
          IMAGE_ARG_base_image: base-image/image.tar
        output_mapping: { image: image }
      - put: ansible-image
        params:
          image: image/image.tar
          version: ((.:image-version))
          bump_aliases: true

resources:
  - name: lib
    type: git
    icon: file-tree
    source: &github
      uri: git@github.com:suhlig/concourse-task-library.git
      private_key: ((secrets.github.ssh_key))
      branch: ((ci-branch))

  - name: ansible-image-source
    type: git
    icon: github-circle
    source:
      <<: *github
      paths: [ images/ansible/Dockerfile ]
      fetch_tags: true

  - name: ansible-image
    type: registry-image
    icon: docker
    source: &dockerhub
      repository: uhligit/ansible
      username: suhlig
      password: ((secrets.dockerhub.authtoken))

  - name: python-image
    type: registry-image
    icon: docker
    source:
      <<: *dockerhub
      repository: python
      tag: alpine

  - name: ansible-pypi-package
    type: pypi
    source:
      package: ansible

resource_types:
  - name: pypi
    type: registry-image
    source:
      repository: uhligit/concourse-pypi-resource
      tag: latest
